events {
    worker_connections 1024;
}

http {
    upstream api {
        server laudos-api:8000;
    }

    server {
        listen 80;
        
        # Proxy para a API
        location /api/ {
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check
        location /health {
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy docs to FastAPI
        # ensure /docs redirects to /docs/ so FastAPI serves UI correctly
        location = /docs {
            return 301 /docs/;
        }

        location /docs/ {
            # proxy directly to the FastAPI docs path to avoid redirect loops
            proxy_pass http://api/docs/;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        # Servir arquivos de laudos estáticos
        location /laudos/ {
            alias /var/www/laudos/;
            try_files $uri $uri/ =404;
        }

        # Página inicial simples
        location / {
            return 200 '{"status": "Laudos AI running", "api": "/health", "docs": "/docs"}';
            add_header Content-Type application/json;
        }
    }
}